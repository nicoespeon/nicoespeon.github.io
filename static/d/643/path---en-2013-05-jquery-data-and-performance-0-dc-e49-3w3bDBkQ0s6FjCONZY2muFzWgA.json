{"data":{"site":{"siteMetadata":{"title":"@nicoespeon's blog","subtitles":{"en":"I write about VS Code, web development and life in general.","fr":"J’écris à propos de VS Code, du développement web et de la vie en général."},"author":{"name":"Nicolas Carlo","twitter":"nicoespeon"},"url":"https://www.nicoespeon.com"}},"markdownRemark":{"id":"937ad04e-33d8-51a5-b674-e31e65140795","html":"<h2 id=\"tldr\"><a href=\"#tldr\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h2>\n<p>jQuery makes elements-related data manipulation easy.</p>\n<p>The HTML5 <code class=\"language-text\">data-*</code> attribute is linked in some way to the jQuery <strong>data</strong> object for DOM elements.</p>\n<p><code class=\"language-text\">$.data(element, key[, value])</code> deals with DOM elements related data.</p>\n<p><code class=\"language-text\">$.fn.data(key[, value])</code> deals with jQuery elements related data.</p>\n<p><code class=\"language-text\">$.data</code> is low-level and executes faster while <code class=\"language-text\">$.fn.data</code> is much more convenient and flexible. Futhermore, the second one can access to the <code class=\"language-text\">data-*</code> attributes.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- HTML --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>main-content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Javascript</span>\n<span class=\"token keyword\">var</span> $el <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#main-content'</span><span class=\"token punctuation\">)</span>\n\n$el<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// fast</span>\n$<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>$el<span class=\"token punctuation\">,</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10 times faster</span></code></pre></div>\n<p>Finally, unlike <code class=\"language-text\">$.fn.attr</code>, both of these methods don’t modify the DOM.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$el<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// &lt;div id=\"main-content\">&lt;/div></span>\n$<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>$el<span class=\"token punctuation\">,</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// &lt;div id=\"main-content\">&lt;/div></span>\n$el<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// &lt;div id=\"main-content\" data-key=\"plop\">&lt;/div></span></code></pre></div>\n<h2 id=\"data-manipulation-with-jquery\"><a href=\"#data-manipulation-with-jquery\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data manipulation with jQuery</h2>\n<p>To attach an information to an element and manipulate it over script execution is dead easy with jQuery. Indeed, the library has methods to store, modify and delete data which are related to an element.</p>\n<p>Futhermore, it’s good to know that the <code class=\"language-text\">data-*</code> attributes introduced with HTML5 are automatically pulled as a jQuery <strong>data</strong> object. Doing so, they are accessible through some of its methods.</p>\n<h3 id=\"fndata\"><a href=\"#fndata\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>$.fn.data</h3>\n<p>The most popular method is <code class=\"language-text\">$.fn.data</code> which is used as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Affects the \"plop\" string to the \"key\" key</span>\nelem<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Reads the data with the \"key\" key</span>\nelem<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- Valid HTML5 code --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>elem<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-my-key</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hey<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#elem'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myKey'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Outputs \"hey\"</span></code></pre></div>\n<p>You’ll notice that we remove <code class=\"language-text\">data-</code> and the HTML hyphens to specify the key the CamelCase way, accordingly to the <a href=\"http://www.w3.org/TR/html5/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes\">W3C specification</a>.</p>\n<p><a href=\"http://api.jquery.com/data/\">The documentation</a> is very simple to get in and gives a good overview of the concept.</p>\n<p>But wait there’s more… use the <code class=\"language-text\">$.fn.removeData</code> method to clean all that mess:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">elem<span class=\"token punctuation\">.</span><span class=\"token function\">removeData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Bye!</span></code></pre></div>\n<h3 id=\"data\"><a href=\"#data\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>$.data</h3>\n<p>The library also comes with a more low-level and less known method, <code class=\"language-text\">$.data</code>. It plays the same role excepted the syntax and the fact that you need to provide a DOM element associated to the data as a parameter.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Affects the \"plop\" string to the \"key\" key</span>\n$<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">,</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Reads the data with the \"key\" key</span>\n$<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">,</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here again, please have a look to the <a href=\"http://api.jquery.com/jQuery.data/\">official documentation</a>.</p>\n<p>We also get the <code class=\"language-text\">$.removeData</code> method to remove data and the <code class=\"language-text\">$.hasData</code> one to check if an element does or doesn’t have data attached:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$<span class=\"token punctuation\">.</span><span class=\"token function\">hasData</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Outputs \"true\"</span>\n$<span class=\"token punctuation\">.</span><span class=\"token function\">removeData</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">,</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Bye!</span>\n$<span class=\"token punctuation\">.</span><span class=\"token function\">hasData</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Outputs \"false\"</span></code></pre></div>\n<h2 id=\"performance-vs-power\"><a href=\"#performance-vs-power\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Performance vs. Power</h2>\n<p>Why should I use <code class=\"language-text\">$.data</code> when <code class=\"language-text\">$.fn.data</code> is much more sexy to write?</p>\n<p>Well, as the method is low-level, <strong>it goes way faster</strong>!</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">el<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// fast</span>\n$<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">,</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// up to 10 times faster</span></code></pre></div>\n<p>I invite you to <a href=\"jsperf.com/jquery-fn-data-vs-data\">test performances by yourself</a>.</p>\n<p>The other side of the coin is that it should attach data to a DOM element while <code class=\"language-text\">$.fn.data</code> can handle any sort of jQuery object, events included:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Affects each link index as a data for the \"click\" event</span>\n<span class=\"token comment\">// When you click on a link, it shows its index</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> index<span class=\"token punctuation\">:</span> i <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My index is '</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Finally, <code class=\"language-text\">$.data</code> doesn’t manage HTML5 <code class=\"language-text\">data-*</code> attributes while <code class=\"language-text\">$.fn.data</code> does.</p>\n<p>Concretely:</p>\n<ul>\n<li>if you deal with an event, use <code class=\"language-text\">$.fn.data</code></li>\n<li>if you deal with an HTML5 <code class=\"language-text\">data-*</code> attribute, use <code class=\"language-text\">$.fn.data</code></li>\n<li>otherwise, use <code class=\"language-text\">$.data</code> because of performance</li>\n</ul>\n<h2 id=\"a-word-about-the-dom\"><a href=\"#a-word-about-the-dom\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A word about the DOM</h2>\n<p>It’s also good to know that both of the <code class=\"language-text\">$.data</code> and <code class=\"language-text\">$.fn.data</code> methods <strong>do not modify the DOM</strong>.</p>\n<p>More precisely, although the <code class=\"language-text\">$.fn.data</code> methods can access to <code class=\"language-text\">data-*</code> attributes, it wouldn’t modify them in the DOM. You shouldn’t get tricked because of the function abstraction: it’s not the attribute you are manipulating but an automatically created <strong>jQuery object</strong>.</p>\n<p>In return, the <code class=\"language-text\">$.fn.attr</code> method is an alternative to reach DOM attributes and to modify them.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>main-content<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-my-key</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hey<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#main-content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myKey'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Change the jQuery object, not the DOM</span>\n<span class=\"token comment\">// &lt;div id=\"main-content\" data-my-key=\"hey\">&lt;/div></span>\n<span class=\"token comment\">// Note: $('#main-content').data('myKey') outputs \"plop\"</span>\n\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#main-content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-my-key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'plop'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Change effectively the DOM</span>\n<span class=\"token comment\">// &lt;div id=\"main-content\" data-key=\"plop\">&lt;/div></span></code></pre></div>\n<p>In the first code, we modified the jQuery object but nothing happen on the HTML.</p>\n<p>In the second code however, we concretely modified the HTML.</p>\n<p>Concerning performance, you might note that <a href=\"http://jsperf.com/jquery-fn-data-vs-fn-attr\">the second is way faster than the first one</a>. A reason for that would probably be that <code class=\"language-text\">$.fn.data</code> does more than just “reach” the element: it performs some casting regarding to the type of the element.</p>\n<p>Thus, it could be very helpful for plugins or widgets initialization:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>widget<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-row</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-responsive</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.widget'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">myWidget</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rows'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">'responsive'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>On the other hand, <code class=\"language-text\">$.fn.attr</code> will always output a string, which could be necessary sometimes.</p>\n<h2 id=\"last-words\"><a href=\"#last-words\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Last words</h2>\n<p>That’s it for my short (but intense!) presentation of existing jQuery methods to manipulate data.</p>\n<p>I thought that notes about performance would have been interesting, but it shouldn’t be a concern: this is not what would make you script significantly faster. Still, it’s good to know about it!</p>\n<p>If I’m lucky enough, that may have been one of your <em>“Aha moment”</em> with JS (<a href=\"http://hugogiraudel.com/2013/04/30/css-aha-moment/\">as some people would call that</a>) =)</p>\n<p>Plop!</p>","fields":{"tagSlugs":["/tags/javascript/","/tags/jquery/","/tags/performance/","/tags/html-5/"],"slug":"/en/2013/05/jquery-data-and-performance/"},"timeToRead":5,"frontmatter":{"title":"jQuery, data and performance","tags":["javascript","jquery","performance","html5"],"date":"2013-05-04T00:00:00.000Z","description":"Best practice and data manipulation with jQuery, no added colourings or preservatives."}}},"pageContext":{"slug":"/en/2013/05/jquery-data-and-performance/"}}