{"data":{"site":{"siteMetadata":{"title":"@nicoespeon's blog","subtitles":{"en":"I write about web development, agile practices and personal organization.","fr":"J’écris sur le développement web, les pratiques agiles et l’organisation personnelle."},"author":{"name":"Nicolas Carlo","twitter":"nicoespeon"},"disqusShortname":"nicoespeon","url":"https://www.nicoespeon.com"}},"markdownRemark":{"id":"38a4a06a-dd79-51f8-abc6-3c6de682c81e","html":"<h2 id=\"tldr\"><a href=\"#tldr\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h2>\n<p>Before <strong>jQuery 1.7</strong> we used to distinguish <code class=\"language-text\">$.fn.bind</code> from <code class=\"language-text\">$.fn.live</code> and <code class=\"language-text\">$.fn.delegate</code> to create events listeners.</p>\n<p><code class=\"language-text\">$.fn.bind</code> is the most basic one which attach an event listener to an object, usually a DOM node.</p>\n<p><code class=\"language-text\">$.fn.live</code> is more powerful as it attach the event listener at the document root and makes the behavior <em>live</em> in every corresponding element of the DOM, even if they are created later.</p>\n<p><code class=\"language-text\">$.fn.delegate</code> behaves almost the same as <code class=\"language-text\">$.fn.live</code>, but you specify a DOM node where to attach your <em>live</em> listener, which is much more faster.</p>\n<p><code class=\"language-text\">$.fn.delegate</code> is more efficient than <code class=\"language-text\">$.fn.live</code> which is more efficient than <code class=\"language-text\">$.fn.bind</code>.</p>\n<p>Since <strong>jQuery 1.7</strong>, all of these methods have been replaced by the <code class=\"language-text\">$.fn.on</code> method. Performance principles still the same, but the syntax changes.</p>\n<h2 id=\"never-gonna-bind-you-up\"><a href=\"#never-gonna-bind-you-up\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Never gonna <code class=\"language-text\">bind</code> you up</h2>\n<p>The most basic method to attach an event listener to a jQuery object. It’s commonly used on DOM elements to create some interaction with the user:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Basic use of $.fn.bind</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div#main-content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> … <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Your object is now listening at the event named <code class=\"language-text\">&#39;click&#39;</code> and will do something everytime this event is triggered. With the previous code, for instance, the functon defined will be triggered everytime you click on the <code class=\"language-text\">#main-content</code> element.</p>\n<p><code class=\"language-text\">&#39;click&#39;</code> is one of the usual events name which has a shorthand method which is equivalent:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Equivalent of the previous code</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div#main-content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> … <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>However, you can pass any event name you may have specify within your code. In fact, this is the key start for <a href=\"http://en.wikipedia.org/wiki/Event-driven_programming\">event-driven programming</a> in JS, which helps to create advanced web-applications.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-event'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> … <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-event'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Will trigger the binded event</span></code></pre></div>\n<p>The method to stop such an event listener is <code class=\"language-text\">$.fn.unbind</code>.</p>\n<p>Until <strong>jQuery 1.7</strong>, this was the most basic way to do things.</p>\n<h2 id=\"born-to-be-a-live\"><a href=\"#born-to-be-a-live\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Born to be a <code class=\"language-text\">live</code></h2>\n<p>Although <code class=\"language-text\">$.fn.bind</code> principle is very nice, the method is very limited. It basically has two downsides:</p>\n<ol>\n<li>\n<p>It attaches an event listener for every single element which matches the selector, which is not the most efficient solution when you target more than one element</p>\n</li>\n<li>\n<p>It attaches an event listener only for elements which matches the selector at this time, if you modify the DOM and want to create the same elements, you’ll need to bind events again.</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// This sucks…</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a.tooltip'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> … <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or $('a.tooltip').click(function() { … });</span></code></pre></div>\n<p>The solution found before <strong>jQuery 1.7</strong> was the <code class=\"language-text\">$.fn.live</code> method:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Basic use of $.fn.live</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li.text-info'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">live</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> … <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Instead of attaching an event listener to every single element, it attaches just one at the <em>document root</em> level. Doing so, any new element which matches the selector will behave the same. Futhermore, it’s <strong>much more efficient</strong> if you speak about performance.</p>\n<p>The method to stop such an event listener is <code class=\"language-text\">$.fn.die</code>.</p>\n<p>The method is deprecated since <strong>jQuery 1.7</strong>, but the principle still the same, which is good to keep in mind.</p>\n<h2 id=\"learn-to-delegate\"><a href=\"#learn-to-delegate\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Learn to <code class=\"language-text\">delegate</code></h2>\n<p>The <code class=\"language-text\">$.fn.delegate</code> method is basically the same than the <code class=\"language-text\">$.fn.live</code>, coming with the same advantages over <code class=\"language-text\">$.fn.bind</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Basic use of $.fn.delegate</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul#main-navigation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">delegate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li.text-info'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> … <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The point is that, instead of attaching every event listener to the <em>document root</em>, you specify a DOM element where you want to focus. Doing so <strong>increase significantly performance</strong> as it’s much more specific!</p>\n<p>The method to stop such an event listener is <code class=\"language-text\">$.fn.undelegate</code>.</p>\n<h2 id=\"turn-me-on\"><a href=\"#turn-me-on\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Turn me <code class=\"language-text\">on</code></h2>\n<p>Since <strong>jQuery 1.7</strong>, all of the previous methods have been merged into one single, powerful method: <code class=\"language-text\">$.fn.on</code>.</p>\n<p>Now you’ve understood the previous ones, let see what are the equivalent syntaxes with the single new method:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Basic use of $.fn.on instead of $.fn.bind</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div#main-content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> … <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Basic use of $.fn.on instead of $.fn.live</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'li.text-info'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> … <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Basic use of $.fn.on instead of $.fn.delegate</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul#main-nav'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'li.text-info'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> … <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The distinction between <code class=\"language-text\">$.fn.live</code> and <code class=\"language-text\">$.fn.delegate</code> is more clear with that single method, and the emphasis on a powerful delegation makes sense (excepted if you explicitly want to attach your listener to the root of the document, which is rare).</p>\n<p>You can either pass <strong>event data</strong> through the method:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Give some data to the event</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> index<span class=\"token punctuation\">:</span> i <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My index is '</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The use of <code class=\"language-text\">$.fn.on</code> is pretty straightforward which makes event handling dead easy with jQuery!</p>\n<p>The method to stop such an event listener is… <code class=\"language-text\">$.fn.off</code>.</p>\n<h2 id=\"what-about-performance\"><a href=\"#what-about-performance\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What about performance?</h2>\n<p>As explained, here are the list of methods from the most efficient to the less one:</p>\n<ol>\n<li><code class=\"language-text\">.on(events, selector, [data,] handler)</code> equivalent to <code class=\"language-text\">$.fn.delegate</code></li>\n<li><code class=\"language-text\">$(document).on(events, selector, [data,] handler)</code> equivalent to <code class=\"language-text\">$.fn.live</code></li>\n<li><code class=\"language-text\">.on(events, [data,] handler)</code> equivalent to <code class=\"language-text\">$.fn.bind</code></li>\n</ol>\n<p>In a nutshell:</p>\n<ul>\n<li>If you need to attach an event listener to more than one element, use <code class=\"language-text\">.on(events, selector, [data,] handler)</code></li>\n<li>If don’t have any anchor to focus on, use <code class=\"language-text\">$(document).on(events, selector, [data,] handler)</code></li>\n<li>Otherwise, use <code class=\"language-text\">.on(events, [data,] handler)</code>, or the shorthand function if exists</li>\n</ul>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>This was a short and friendly reminder about event delegation in jQuery.</p>\n<p>No hot news but such a big deal in this article. That was a point worth noting you could also find easily, doing some researches through the Internet.</p>\n<p>I realized very few time ago that I always used shorthand functions, dealing with a bunch of DOM elements sometimes, when I could have used more efficient methods. <strong>When you’ve to deal with more than one element, think about the <code class=\"language-text\">$.fn.on</code> method!</strong></p>\n<p>I hope this have you learn something or refresh your mind on that point. If so, don’t hesitate to leave me comment below ;-)</p>\n<p>Plop!</p>","fields":{"tagSlugs":["/tags/javascript/","/tags/performance/","/tags/jquery/","/tags/events/"]},"frontmatter":{"title":"Event delegation in jQuery","tags":["javascript","performance","jquery","events"],"date":"2013-05-13T00:00:00.000Z","description":"A few reminders about event listeners and the event delegation best practices in jQuery."}}},"pageContext":{"slug":"/en/2013/05/event-delegation-jquery/"}}