{"data":{"site":{"siteMetadata":{"title":"@nicoespeon's blog","subtitles":{"en":"I write about VS Code, web development and life in general.","fr":"J’écris à propos de VS Code, du développement web et de la vie en général."},"author":{"name":"Nicolas Carlo","twitter":"nicoespeon"},"url":"https://www.nicoespeon.com"}},"markdownRemark":{"id":"ddf8961c-37ec-50b4-836c-75c276a2dc44","html":"<h2 id=\"tldr\"><a href=\"#tldr\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h2>\n<p>Jusqu’à <strong>jQuery 1.7</strong> on faisait la distinction entre <code class=\"language-text\">$.fn.bind</code>, <code class=\"language-text\">$.fn.live</code> et <code class=\"language-text\">$.fn.delegate</code> afin de créer des écouteurs d’événements.</p>\n<p><code class=\"language-text\">$.fn.bind</code> est la manière la plus basique d’attacher un écouteur à un objet, généralement un noeud du DOM.</p>\n<p><code class=\"language-text\">$.fn.live</code> est plus puissant car il attache l’écouteur à la racine du document et fait <em>vivre</em> le comportement sur chaque élément du DOM correspondant, y compris ceux créés par la suite.</p>\n<p><code class=\"language-text\">$.fn.delegate</code> se comporte plus ou moins comme <code class=\"language-text\">$.fn.live</code> à ceci près que l’on spécifie un noeud du DOM où l’on attache notre écouteur <em>live</em>, ce qui est bien plus rapide à l’exécution.</p>\n<p><code class=\"language-text\">$.fn.delegate</code> est plus performant que <code class=\"language-text\">$.fn.live</code> qui est plus performant que <code class=\"language-text\">$.fn.bind</code>.</p>\n<p>Depuis <strong>jQuery 1.7</strong>, toutes ces méthodes ont étés remplacées par l’unique méthode <code class=\"language-text\">$.fn.on</code>. Les principes de performance sont les mêmes, seule la syntaxe change.</p>\n<h2 id=\"never-gonna-bind-you-up\"><a href=\"#never-gonna-bind-you-up\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Never gonna <code class=\"language-text\">bind</code> you up</h2>\n<p>C’est la méthode la plus élémentaire pour attacher un écouteur d’événements à un objet jQuery. Elle est généralement utilisée sur des éléments du DOM dans le but de créer des intéractions avec l’utilisateur :</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Utilisation basique de $.fn.bind</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div#main-content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* … */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Notre objet écoute désormais l’événement nommé <code class=\"language-text\">&#39;click&#39;</code> et réagira à chaque fois que cet événement sera déclenché. Sur l’exemple précédent par exemple, la fonction définie sera déclenchée à chaque fois que l’on cliquera sur l’élément <code class=\"language-text\">#main-content</code>.</p>\n<p><code class=\"language-text\">&#39;click&#39;</code> est l’un des noms d’événements usuels qui dispose d’une méthode raccourcie équivalente :</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Équivalent du code précédent</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div#main-content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* … */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cependant, il est possible de spécifier n’importe quel nom d’événement utilisé dans le code. En fait, c’est le point de départ de la <a href=\"http://fr.wikipedia.org/wiki/Programmation_%C3%A9v%C3%A9nementielle\">programmation événementielle</a> en JS, permettant de créer des applications web avancées.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-event'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* … */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-event'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Déclenchera l'événement lié</span></code></pre></div>\n<p>La méthode pour arrêter un tel écouteur est <code class=\"language-text\">$.fn.unbind</code>.</p>\n<p>Avant <strong>jQuery 1.7</strong>, c’était la manière la plus basique de faire les choses.</p>\n<h2 id=\"born-to-be-a-live\"><a href=\"#born-to-be-a-live\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Born to be a <code class=\"language-text\">live</code></h2>\n<p>Bien que le principe de <code class=\"language-text\">$.fn.bind</code> soit sympatoche, la méthode est assez limitée. Typiquement, elle a deux inconvénients :</p>\n<ol>\n<li>\n<p>Il attache un écouteur pour chacun des éléments qui correspondent au sélecteur, ce qui n’est pas la solution la plus optimale lorsque l’on cible plus d’un élément</p>\n</li>\n<li>\n<p>Il attache un écouteur seuelement sur les éléments qui correspondent au sélecteur à ce moment précis, si vous modifiez le DOM et souhaitez créer de nouveaux éléments identiques, il vous faudra attacher les événements à nouveau.</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Pas glop…</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a.tooltip'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* … */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ou $('a.tooltip').click(function() { /* … */ });</span></code></pre></div>\n<p>La solution développée avant <strong>jQuery 1.7</strong> était la méthode <code class=\"language-text\">$.fn.live</code> :</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Utilisation basique de $.fn.live</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li.text-info'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">live</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* … */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Au lieu d’attacher un écouteur d’événements à chaque élément, il en attache un au niveau du <em>document root</em>. Ainsi, chaque nouvel élément qui correspond au sélecteur se comportera de la même manière. De plus, c’est <strong>bien plus efficace</strong> en termes de performance.</p>\n<p>La méthode pour arrêter un tel écouteur est <code class=\"language-text\">$.fn.die</code>.</p>\n<p>Cette méthode est dépréciée depuis <strong>jQuery 1.7</strong>, mais le principe reste le même, ce qui est bon à savoir.</p>\n<h2 id=\"learn-to-delegate\"><a href=\"#learn-to-delegate\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Learn to <code class=\"language-text\">delegate</code></h2>\n<p>La méthode <code class=\"language-text\">$.fn.delegate</code> est basiquement la même que <code class=\"language-text\">$.fn.live</code>, présentant les mêmes avantages par rapport à <code class=\"language-text\">$.fn.bind</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Utilisation basique de $.fn.delegate</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul#main-navigation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">delegate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li.text-info'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* … */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Le truc c’est que, au lieu d’attacher chaque écouteur au <em>document root</em>, vous spécifiez l’élément du DOM où vous souhaitez porter votre attention. Ainsi, vous <strong>augmentez significativement la performance</strong> car c’est bien plus spécifique !</p>\n<p>La méthode pour arrêter un tel écouteur est <code class=\"language-text\">$.fn.undelegate</code>.</p>\n<h2 id=\"turn-me-on\"><a href=\"#turn-me-on\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Turn me <code class=\"language-text\">on</code></h2>\n<p>Depuis <strong>jQuery 1.7</strong>, toutes les précédentes méthodes ont étés fusionnées dans une seule, puissante et unique méthode : <code class=\"language-text\">$.fn.on</code>.</p>\n<p>Maintenant que vous avez compris comment les précédentes fonctionnent, voyons quels sont leur équivalent avec la syntaxe de celle-ci :</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Utilisation basique de $.fn.on au lieu de $.fn.bind</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div#main-content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* … */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Utilisation basique de $.fn.on au lieu de $.fn.live</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'li.text-info'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* … */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Utilisation basique de $.fn.on au lieu de $.fn.delegate</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul#main-nav'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hover'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'li.text-info'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* … */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>La distinction entre <code class=\"language-text\">$.fn.live</code> et <code class=\"language-text\">$.fn.delegate</code> et plus claire avec cette simple méthode, l’accent mis sur la délégation prend son sens (sauf si vous souhaitez explicitement attacher votre écouteur à la racine du document, ce qui est rare).</p>\n<p>Vous pouvez également passer des <strong>event data</strong> via la méthode :</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Attache des données à l'événement</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> index<span class=\"token punctuation\">:</span> i <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My index is '</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>L’utilisation de <code class=\"language-text\">$.fn.on</code> est instinctive et rend la gestion événementielle très facile à prendre en main avec jQuery!</p>\n<p>La méthode pour arrêter un tel écouteur est… <code class=\"language-text\">$.fn.off</code>.</p>\n<h2 id=\"et-pour-la-performance-\"><a href=\"#et-pour-la-performance-\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Et pour la performance ?</h2>\n<p>Comme expliqué, voici le listing des méthodes, de la plus performante à la moins performante :</p>\n<ol>\n<li><code class=\"language-text\">.on(events, selector, [data,] handler)</code> équivaut à <code class=\"language-text\">$.fn.delegate</code></li>\n<li><code class=\"language-text\">$(document).on(events, selector, [data,] handler)</code> équivaut à <code class=\"language-text\">$.fn.live</code></li>\n<li><code class=\"language-text\">.on(events, [data,] handler)</code> équivaut à <code class=\"language-text\">$.fn.bind</code></li>\n</ol>\n<p>Pour résumer :</p>\n<ul>\n<li>Si vous avez besoin d’attacher un écouteur d’événements à plus d’un élément, utilisez <code class=\"language-text\">.on(events, selector, [data,] handler)</code></li>\n<li>Si vous n’avez pas d’ancre sur laquelle vous rattacher, utilisez <code class=\"language-text\">$(document).on(events, selector, [data,] handler)</code></li>\n<li>Sinon, utilisez <code class=\"language-text\">.on(events, [data,] handler)</code>, ou la fonction raccourcie s’il y en a une</li>\n</ul>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>C’était un bref et gentil rappel sur la délégation des événements en jQuery.</p>\n<p>Rien de nouveau sous le soleil mais cette article traite d’un point important. C’est un point à savoir que vous pouvez facilement retrouver sur le net en faisant quelques recherches.</p>\n<p>Je me suis rendu compte il y a quelque temps que j’avais la fâcheuse tendance de toujours utiliser la fonction raccourcie, même pour traiter un certain nombre d’éléments, alors que j’aurais pu employer des méthodes bien plus efficaces. <strong>Lorsque vous vous retrouvez à gérer plus d’un élément, pensez à la méthode <code class=\"language-text\">$.fn.on</code> !</strong></p>\n<p>J’espère que ce petit point vous aura appris quelque chose ou rafraîchi la mémoire. Si c’est le cas, n’hésitez pas à me laisser votre opinion ci-dessous ;-)</p>\n<p>Plop!</p>","fields":{"tagSlugs":["/fr/tags/javascript/","/fr/tags/performance/","/fr/tags/jquery/"],"slug":"/fr/2013/05/deleguer-evenements-jquery/"},"timeToRead":5,"frontmatter":{"title":"Déléguer les événements en jQuery","tags":["javascript","performance","jquery"],"date":"2013-05-13T00:00:00.000Z","description":"Un petit rappel sur les écouteurs d'événements et les bonnes pratiques de délégations en jQuery."}}},"pageContext":{"slug":"/fr/2013/05/deleguer-evenements-jquery/"}}