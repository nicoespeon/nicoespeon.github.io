{"data":{"site":{"siteMetadata":{"title":"@nicoespeon's blog","subtitles":{"en":"I write about VS Code, web development and life in general.","fr":"J‚Äô√©cris √† propos de VS Code, du d√©veloppement web et de la vie en g√©n√©ral."},"author":{"name":"Nicolas Carlo","bluesky":"nicoespeon"},"url":"https://www.nicoespeon.com"}},"markdownRemark":{"id":"61ddd357-ff3a-59a5-bc11-faa3e138bab4","html":"<p>Today, I was working on Busbud ‚ÄúPreview‚Äù environment. I was connected to the distant Heroku machine, through ssh (with the Heroku CLI command <code class=\"language-text\">heroku run bash</code>). I ran a task that generates a CSV report and I wanted to get it on my local machine so I can read it more conveniently.</p>\n<p>In such a scenario, I usually use <code class=\"language-text\">scp</code> from my machine to download the file from the distant server. But I didn‚Äôt know the address of the machine I was connected to since I used the convenient Heroku CLI. I could have searched for it, but instead, a Google search gave me a nice solution: <a href=\"https://transfer.sh/\">transfer.sh</a>.</p>\n<figure>\n  <blockquote>\n    <p>Easy file sharing from the command line</p>\n    <footer>\n      <cite>‚Äî Transfer.sh website</cite>\n    </footer>\n  </blockquote>\n</figure>\n<p>The idea is to send data to this service from CLI, then retrieve it from an URL. Data could also be encrypted, and upload is made through https üîê</p>\n<p>Usage is very simple. Say I want to get my <code class=\"language-text\">task-report.csv</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">curl --upload-file ./task-report.csv https://transfer.sh/my-report.csv</code></pre></div>\n<p>After the upload is complete, I get the URL where I can retrieve it (e.g. <code class=\"language-text\">https://transfer.sh/66nb8/my-report.csv</code>).</p>\n<p>Data are stored 14 days by default. But this can be configured on upload, with other different options like:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">curl -H &quot;Max-Downloads: 1&quot; -H &quot;Max-Days: 5&quot; --upload-file ./hello.txt https://transfer.sh/hello.txt</code></pre></div>\n<p>I can also configure an alias for convenience, but I didn‚Äôt feel I need to‚ÄîI‚Äôd usually use that from a distant server which I don‚Äôt have the address on hand.</p>\n<p>So yeah. I did that and got my CSV file in no time. Thank you transfer.sh!</p>\n<p><strong>And you, do you have tips &#x26; tricks for retrieving distant files?</strong></p>","fields":{"tagSlugs":["/tags/til/","/tags/ssh/","/tags/heroku/","/tags/cli/"],"slug":"/en/2019/01/til-get-files-from-distant-machine/"},"timeToRead":1,"frontmatter":{"title":"TIL: Easy file sharing from the command line","tags":["til","ssh","heroku","cli"],"date":"2019-01-16T00:00:00.000Z","description":"Today, I learned how to easily retrieve a file from a distant server."}}},"pageContext":{"slug":"/en/2019/01/til-get-files-from-distant-machine/"}}