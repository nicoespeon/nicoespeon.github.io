{"data":{"site":{"siteMetadata":{"title":"@nicoespeon's blog","subtitles":{"en":"I write about VS Code, web development and life in general.","fr":"J‚Äô√©cris √† propos de VS Code, du d√©veloppement web et de la vie en g√©n√©ral."},"author":{"name":"Nicolas Carlo","bluesky":"nicoespeon"},"url":"https://www.nicoespeon.com"}},"markdownRemark":{"id":"69403395-c468-5075-ae4b-c104c7d570c6","html":"<p>A friend recently asked me if I knew a trick to generate a somehow clean PDF of a git history, as he needed to share that to a non-technical person.</p>\n<p>I used to dig into git history a lot <a href=\"https://github.com/nicoespeon/gitgraph.js/\">to generate git graphs in the browser</a> (although I don‚Äôt maintain this project anymore). So I know some tricks indeed.</p>\n<p>The <code class=\"language-text\">git</code> CLI is a goldmine that‚Äôs overlooked. You can retrieve many things from <code class=\"language-text\">git log</code>, as long as you play around with the options.</p>\n<h2 id=\"generate-a-pdf-from-git-history\"><a href=\"#generate-a-pdf-from-git-history\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generate a PDF from git history</h2>\n<p>The first step is to generate a text file from the logs:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git --no-pager log --graph --all --oneline &gt; git-history.txt</code></pre></div>\n<p>Then, you can either convert that <code class=\"language-text\">.txt</code> into a PDF using an online service (if data is not sensitive): <a href=\"http://www.convertfiles.com/converter.php\">http://www.convertfiles.com/converter.php</a></p>\n<p>Or you can use libreoffice if you don‚Äôt want to send your history to some online web converter (thank you <a href=\"https://twitter.com/mcassard\">@mcassard</a> üëç):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">libreoffice --convert-to &quot;pdf&quot; git-history.txt</code></pre></div>\n<h2 id=\"lets-decompose-the-git-command\"><a href=\"#lets-decompose-the-git-command\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Let‚Äôs decompose the git command</h2>\n<p>I think this is a good excuse to learn some git options. These can be useful in other contexts:</p>\n<ul>\n<li><code class=\"language-text\">git --no-pager</code> tells git to <strong>not</strong> use a pager, so we can get all of the history in one file</li>\n<li><code class=\"language-text\">log --graph</code> tells the log command to draw a graph representation, because that‚Äôs what we‚Äôre looking for (we want to see the branches!)</li>\n<li><code class=\"language-text\">--all</code> will show all commits from all branches (local and remote tracking) and tags, everything üëê</li>\n<li><code class=\"language-text\">--oneline</code> is a shorthand that abbreviates commits and renders a compact version of the graph (so it‚Äôs digestible on a PDF file)</li>\n</ul>\n<p>To learn more about <code class=\"language-text\">git log</code> options, you can have a look <a href=\"https://git-scm.com/docs/git-log\">at the docs</a>. But it can feel a bit abstract. I recommend you fiddling with the options in a git project to really understand what‚Äôs going on!</p>","fields":{"tagSlugs":["/tags/git/"],"slug":"/en/2020/10/how-to-export-git-history-pdf"},"timeToRead":2,"frontmatter":{"title":"How to export git history in PDF","tags":["git"],"date":"2020-08-16T00:00:00.000Z","description":"In case you need to export your git history, because reasons."}}},"pageContext":{"slug":"/en/2020/10/how-to-export-git-history-pdf"}}