{"version":3,"sources":["webpack:///./src/pages/fr/index.jsx","webpack:///./src/components/SEO/index.jsx","webpack:///./src/helpers.js","webpack:///./src/hocs/withLocalMoment/index.jsx","webpack:///./src/components/Post/index.jsx"],"names":["IndexRoute","render","i18n","this","props","_this$props$data$site","data","site","siteMetadata","title","subtitles","items","allMarkdownRemark","edges","filter","post","node","fields","slug","startsWith","map","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_Post__WEBPACK_IMPORTED_MODULE_8__","key","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","name","content","lang","_components_SEO__WEBPACK_IMPORTED_MODULE_10__","_components_Sidebar__WEBPACK_IMPORTED_MODULE_9__","className","React","Component","withI18n","pageQuery","query","SEO","_ref","_ref$meta","meta","_ref$title","_ref$slug","_ref$lang","_ref$image","image","profilePic","description","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","metaImage","url","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","Object","assign","htmlAttributes","titleTemplate","property","author","twitter","concat","_public_static_d_3867784087_json__WEBPACK_IMPORTED_MODULE_1__","formatTimeToRead","timeToRead","cupCount","Math","round","cups","Array","fill","join","en","fr","withLocalMoment","WrappedComponent","react__WEBPACK_IMPORTED_MODULE_1___default","localMoment","date","moment","locale","Post","_this$props","_this$props$data$node","frontmatter","category","_this$props$data$node2","categorySlug","read","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","dateTime","format"],"mappings":"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","file":"component---src-pages-fr-index-jsx-a9653b0ec16f9ce51f95.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport withI18n from '../../hocs/withI18n'\nimport Layout from '../../components/Layout'\nimport Post from '../../components/Post'\nimport Sidebar from '../../components/Sidebar'\nimport SEO from '../../components/SEO'\n\nclass IndexRoute extends React.Component {\n  render() {\n    const { i18n } = this.props\n    const { title, subtitles } = this.props.data.site.siteMetadata\n    const posts = this.props.data.allMarkdownRemark.edges\n    const items = posts\n      .filter(post => post.node.fields.slug.startsWith('/fr/'))\n      .map(post => <Post data={post} key={post.node.fields.slug} i18n={i18n} />)\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={subtitles[i18n.lang]} />\n          </Helmet>\n          <SEO lang=\"fr\" />\n          <Sidebar {...this.props} />\n          <div className=\"content\">\n            <div className=\"content__inner\">{items}</div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default withI18n(IndexRoute)\n\nexport const pageQuery = graphql`\n  query IndexQueryFr {\n    site {\n      siteMetadata {\n        title\n        subtitles {\n          en\n          fr\n        }\n        greetings {\n          en\n          fr\n        }\n        menus {\n          en {\n            label\n            path\n          }\n          fr {\n            label\n            path\n          }\n        }\n        author {\n          name\n          email\n          twitter\n          github\n          linkedin\n          rss\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { layout: { eq: \"post\" }, draft: { ne: true } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport profilePic from '../../pages/photo.jpg'\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        subtitles {\n          en\n          fr\n        }\n        url\n        author {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nfunction SEO({\n  meta = [],\n  title = '',\n  slug = '',\n  lang = 'en',\n  image = profilePic,\n  description,\n}) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site\n        const metaDescription = description || siteMetadata.subtitles[lang]\n        const metaImage = `${siteMetadata.url}/${image}`\n        const url = `${siteMetadata.url}${slug}`\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s â€” ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: siteMetadata.title,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: `@${siteMetadata.author.twitter}`,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n","/* eslint-disable import/prefer-default-export */\n// This one is intentional.\nexport function formatTimeToRead(timeToRead, lang) {\n  const cupCount = Math.round(timeToRead / 5) || 1\n  const cups = new Array(cupCount).fill('â˜•').join('')\n\n  return {\n    en: `${cups} ${timeToRead} min read`,\n    fr: `${cups} ${timeToRead} min de lecture`,\n  }[lang]\n}\n/* eslint-enable import/prefer-default-export */\n","import React from 'react'\nimport moment from 'moment'\nimport 'moment/locale/fr'\n\nfunction withLocalMoment(WrappedComponent) {\n  return props => {\n    const localMoment = date => moment(date).locale(props.i18n.lang)\n    return <WrappedComponent {...props} localMoment={localMoment} />\n  }\n}\n\nexport default withLocalMoment\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { formatTimeToRead } from '../../helpers'\nimport withLocalMoment from '../../hocs/withLocalMoment'\nimport './style.scss'\n\nclass Post extends React.Component {\n  render() {\n    const { i18n, localMoment } = this.props\n    const { timeToRead } = this.props.data.node\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n\n    const read = {\n      en: 'Read',\n      fr: 'Lire',\n    }[i18n.lang]\n\n    return (\n      <div className=\"post\">\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={localMoment(date).format('MMMM D, YYYY')}\n          >\n            {localMoment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <small className=\"post__meta-readtime\">\n            {formatTimeToRead(timeToRead, i18n.lang)}\n          </small>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              #{category}\n            </Link>\n          </span>\n        </div>\n        <p className=\"post__description\">{description}</p>\n        <Link className=\"post__readmore link-underlined\" to={slug}>\n          {read}\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default withLocalMoment(Post)\n"],"sourceRoot":""}