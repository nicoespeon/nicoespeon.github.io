{"version":3,"sources":["webpack:///./src/components/CategoryTemplateDetails/index.jsx","webpack:///./src/templates/category-template.jsx","webpack:///./src/components/SEO/index.jsx","webpack:///./src/helpers.js","webpack:///./src/hocs/withLocalMoment/index.jsx","webpack:///./src/components/Post/index.jsx"],"names":["CategoryTemplateDetails","render","_this","this","items","category","props","pageContext","data","allMarkdownRemark","edges","forEach","post","push","react_default","a","createElement","Post","key","node","fields","slug","i18n","className","React","Component","CategoryTemplate","title","site","siteMetadata","Layout","Helmet_default","SEO","location","pathname","lang","Sidebar","components_CategoryTemplateDetails","pageQuery","withI18n","query","_ref","_ref$meta","meta","_ref$title","_ref$slug","_ref$lang","image","description","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","subtitles","metaImage","url","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","Object","assign","htmlAttributes","titleTemplate","name","content","property","author","twitter","concat","_public_static_d_3867784087_json__WEBPACK_IMPORTED_MODULE_1__","formatTimeToRead","timeToRead","cupCount","Math","round","cups","Array","fill","join","en","fr","withLocalMoment","WrappedComponent","react__WEBPACK_IMPORTED_MODULE_1___default","localMoment","date","moment","locale","_this$props","_this$props$data$node","frontmatter","_this$props$data$node2","categorySlug","read","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","dateTime","format"],"mappings":"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","file":"component---src-templates-category-template-jsx-9d7e3d8f341ab4288c7e.js","sourcesContent":["import React from 'react'\nimport Post from '../Post'\n\nclass CategoryTemplateDetails extends React.Component {\n  render() {\n    const items = []\n    const { category } = this.props.pageContext\n    const posts = this.props.data.allMarkdownRemark.edges\n    posts.forEach(post => {\n      items.push(\n        <Post data={post} key={post.node.fields.slug} i18n={this.props.i18n} />\n      )\n    })\n\n    return (\n      <div className=\"content\">\n        <div className=\"content__inner\">\n          <div className=\"page\">\n            <h1 className=\"page__title\">{category}</h1>\n            <div className=\"page__body\">{items}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CategoryTemplateDetails\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport withI18n from '../hocs/withI18n'\nimport Layout from '../components/Layout'\nimport Sidebar from '../components/Sidebar'\nimport SEO from '../components/SEO'\nimport CategoryTemplateDetails from '../components/CategoryTemplateDetails'\n\nclass CategoryTemplate extends React.Component {\n  render() {\n    const { title } = this.props.data.site.siteMetadata\n    const { category } = this.props.pageContext\n\n    return (\n      <Layout>\n        <div>\n          <Helmet title={`${category} - ${title}`} />\n          <SEO\n            title={`${category} - ${title}`}\n            slug={this.props.location.pathname}\n            lang={this.props.i18n.lang}\n          />\n          <Sidebar {...this.props} />\n          <CategoryTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default withI18n(CategoryTemplate)\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    site {\n      siteMetadata {\n        title\n        subtitles {\n          en\n          fr\n        }\n        greetings {\n          en\n          fr\n        }\n        menus {\n          en {\n            label\n            path\n          }\n          fr {\n            label\n            path\n          }\n        }\n        author {\n          name\n          email\n          twitter\n          github\n          linkedin\n          rss\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: {\n        frontmatter: {\n          category: { eq: $category }\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        subtitles {\n          en\n          fr\n        }\n        url\n        author {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nfunction SEO({\n  meta = [],\n  title = '',\n  slug = '',\n  lang = 'en',\n  image,\n  description,\n}) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site\n        const metaDescription = description || siteMetadata.subtitles[lang]\n        const metaImage = image ? `${siteMetadata.url}/${image}` : null\n        const url = `${siteMetadata.url}${slug}`\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s â€” ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: siteMetadata.title,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: `@${siteMetadata.author.twitter}`,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n","/* eslint-disable import/prefer-default-export */\n// This one is intentional.\nexport function formatTimeToRead(timeToRead, lang) {\n  const cupCount = Math.round(timeToRead / 5) || 1\n  const cups = new Array(cupCount).fill('â˜•').join('')\n\n  return {\n    en: `${cups} ${timeToRead} min read`,\n    fr: `${cups} ${timeToRead} min de lecture`,\n  }[lang]\n}\n/* eslint-enable import/prefer-default-export */\n","import React from 'react'\nimport moment from 'moment'\nimport 'moment/locale/fr'\n\nfunction withLocalMoment(WrappedComponent) {\n  return props => {\n    const localMoment = date => moment(date).locale(props.i18n.lang)\n    return <WrappedComponent {...props} localMoment={localMoment} />\n  }\n}\n\nexport default withLocalMoment\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { formatTimeToRead } from '../../helpers'\nimport withLocalMoment from '../../hocs/withLocalMoment'\nimport './style.scss'\n\nclass Post extends React.Component {\n  render() {\n    const { i18n, localMoment } = this.props\n    const { timeToRead } = this.props.data.node\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n\n    const read = {\n      en: 'Read',\n      fr: 'Lire',\n    }[i18n.lang]\n\n    return (\n      <div className=\"post\">\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={localMoment(date).format('MMMM D, YYYY')}\n          >\n            {localMoment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <small className=\"post__meta-readtime\">\n            {formatTimeToRead(timeToRead, i18n.lang)}\n          </small>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              #{category}\n            </Link>\n          </span>\n        </div>\n        <p className=\"post__description\">{description}</p>\n        <Link className=\"post__readmore link-underlined\" to={slug}>\n          {read}\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default withLocalMoment(Post)\n"],"sourceRoot":""}