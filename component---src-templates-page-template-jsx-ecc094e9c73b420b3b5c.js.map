{"version":3,"sources":["webpack:///./src/components/PageTemplateDetails/index.jsx","webpack:///./src/templates/page-template.jsx","webpack:///./src/components/SEO/index.jsx"],"names":["PageTemplateDetails","render","page","this","props","data","markdownRemark","react_default","a","createElement","Sidebar","className","frontmatter","title","dangerouslySetInnerHTML","__html","html","React","Component","PageTemplate","i18n","_this$props$data$site","site","siteMetadata","subtitles","_page$frontmatter","pageTitle","pageDescription","description","lang","Layout","Helmet_default","name","content","SEO","slug","fields","components_PageTemplateDetails","pageQuery","withI18n","query","_ref","_ref$meta","meta","_ref$title","_ref$slug","_ref$lang","image","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","metaImage","url","profilePic","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","Object","assign","htmlAttributes","titleTemplate","property","author","twitter","concat","_public_static_d_3867784087_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-page-template-jsx-ecc094e9c73b420b3b5c.js","sourcesContent":["import React from 'react'\nimport Sidebar from '../Sidebar'\nimport './style.scss'\n\nclass PageTemplateDetails extends React.Component {\n  render() {\n    const page = this.props.data.markdownRemark\n\n    return (\n      <div>\n        <Sidebar {...this.props} />\n        <div className=\"content\">\n          <div className=\"content__inner\">\n            <div className=\"page with-links\">\n              <h1 className=\"page__title\">{page.frontmatter.title}</h1>\n              <div\n                className=\"page__body\"\n                /* eslint-disable react/no-danger */\n                dangerouslySetInnerHTML={{ __html: page.html }}\n                /* eslint-enable react/no-danger */\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PageTemplateDetails\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport withI18n from '../hocs/withI18n'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport PageTemplateDetails from '../components/PageTemplateDetails'\n\nclass PageTemplate extends React.Component {\n  render() {\n    const { i18n } = this.props\n    const { title, subtitles } = this.props.data.site.siteMetadata\n    const page = this.props.data.markdownRemark\n    const { title: pageTitle, description: pageDescription } = page.frontmatter\n    const description =\n      pageDescription !== null ? pageDescription : subtitles[i18n.lang]\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${pageTitle} - ${title}`}</title>\n            <meta name=\"description\" content={description} />\n          </Helmet>\n          <SEO\n            title={`${pageTitle} - ${title}`}\n            description={description}\n            slug={page.fields.slug}\n          />\n          <PageTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default withI18n(PageTemplate)\n\nexport const pageQuery = graphql`\n  query PageBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitles {\n          en\n          fr\n        }\n        greetings {\n          en\n          fr\n        }\n        menus {\n          en {\n            label\n            path\n          }\n          fr {\n            label\n            path\n          }\n        }\n        author {\n          name\n          email\n          twitter\n          github\n          linkedin\n          rss\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date\n        description\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport profilePic from '../../pages/photo.jpg'\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        subtitles {\n          en\n          fr\n        }\n        url\n        author {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nfunction SEO({\n  meta = [],\n  title = '',\n  slug = '',\n  lang = 'en',\n  image,\n  description,\n}) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site\n        const metaDescription = description || siteMetadata.subtitles[lang]\n        const metaImage = image ? `${siteMetadata.url}/${image}` : profilePic\n        const url = `${siteMetadata.url}${slug}`\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s â€” ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: siteMetadata.title,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: `@${siteMetadata.author.twitter}`,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n"],"sourceRoot":""}