{"version":3,"sources":["webpack:///./src/components/PageTemplateDetails/index.jsx","webpack:///./src/templates/page-template.jsx","webpack:///./src/components/SEO/index.jsx"],"names":["PageTemplateDetails","render","page","this","props","data","markdownRemark","react_default","a","createElement","Sidebar","className","frontmatter","title","dangerouslySetInnerHTML","__html","html","React","Component","PageTemplate","i18n","_this$props$data$site","site","siteMetadata","subtitles","_page$frontmatter","pageTitle","pageDescription","description","lang","Layout","Helmet_default","name","content","SEO","slug","fields","components_PageTemplateDetails","pageQuery","__webpack_exports__","withI18n","query","_ref","_ref$meta","meta","_ref$title","_ref$slug","_ref$lang","_ref$image","image","profilePic","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","metaImage","url","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","Object","assign","htmlAttributes","titleTemplate","property","author","twitter","concat","_public_static_d_3867784087_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-page-template-jsx-b6d890f6fc5be99d9249.js","sourcesContent":["import React from 'react'\nimport Sidebar from '../Sidebar'\nimport './style.scss'\n\nclass PageTemplateDetails extends React.Component {\n  render() {\n    const page = this.props.data.markdownRemark\n\n    return (\n      <div>\n        <Sidebar {...this.props} />\n        <div className=\"content\">\n          <div className=\"content__inner\">\n            <div className=\"page with-links\">\n              <h1 className=\"page__title\">{page.frontmatter.title}</h1>\n              <div\n                className=\"page__body\"\n                /* eslint-disable react/no-danger */\n                dangerouslySetInnerHTML={{ __html: page.html }}\n                /* eslint-enable react/no-danger */\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PageTemplateDetails\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport withI18n from '../hocs/withI18n'\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport PageTemplateDetails from '../components/PageTemplateDetails'\n\nclass PageTemplate extends React.Component {\n  render() {\n    const { i18n } = this.props\n    const { title, subtitles } = this.props.data.site.siteMetadata\n    const page = this.props.data.markdownRemark\n    const { title: pageTitle, description: pageDescription } = page.frontmatter\n    const description =\n      pageDescription !== null ? pageDescription : subtitles[i18n.lang]\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${pageTitle} - ${title}`}</title>\n            <meta name=\"description\" content={description} />\n          </Helmet>\n          <SEO\n            title={`${pageTitle} - ${title}`}\n            description={description}\n            slug={page.fields.slug}\n          />\n          <PageTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default withI18n(PageTemplate)\n\nexport const pageQuery = graphql`\n  query PageBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitles {\n          en\n          fr\n        }\n        greetings {\n          en\n          fr\n        }\n        menus {\n          en {\n            label\n            path\n          }\n          fr {\n            label\n            path\n          }\n        }\n        author {\n          name\n          email\n          twitter\n          github\n          linkedin\n          rss\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date\n        description\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport profilePic from '../../pages/photo.jpg'\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        subtitles {\n          en\n          fr\n        }\n        url\n        author {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nfunction SEO({\n  meta = [],\n  title = '',\n  slug = '',\n  lang = 'en',\n  image = profilePic,\n  description,\n}) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site\n        const metaDescription = description || siteMetadata.subtitles[lang]\n        const metaImage = `${siteMetadata.url}${image}`\n        const url = `${siteMetadata.url}${slug}`\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s â€” ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: siteMetadata.title,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: `@${siteMetadata.author.twitter}`,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n"],"sourceRoot":""}