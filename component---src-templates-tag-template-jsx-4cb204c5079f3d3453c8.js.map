{"version":3,"sources":["webpack:///./src/components/TagTemplateDetails/index.jsx","webpack:///./src/templates/tag-template.jsx","webpack:///./src/helpers.js","webpack:///./src/hocs/withLocalMoment/index.jsx","webpack:///./src/components/Post/index.jsx"],"names":["TagTemplateDetails","render","i18n","this","props","items","data","allMarkdownRemark","edges","filter","post","node","fields","slug","startsWith","lang","map","react_default","a","createElement","Post","key","tagTitle","pageContext","tag","title","en","fr","className","React","Component","TagTemplate","site","siteMetadata","pageTitle","Layout","Helmet_default","Sidebar","components_TagTemplateDetails","pageQuery","withI18n","formatTimeToRead","timeToRead","cupCount","Math","round","cups","Array","fill","join","withLocalMoment","WrappedComponent","react__WEBPACK_IMPORTED_MODULE_1___default","Object","assign","localMoment","date","moment","locale","_this$props","_this$props$data$node","frontmatter","category","description","_this$props$data$node2","categorySlug","read","dateTime","format","gatsby__WEBPACK_IMPORTED_MODULE_2__","to"],"mappings":"iNAkCeA,4FA9BbC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KAGFG,EADQF,KAAKC,MAAME,KAAKC,kBAAkBC,MAE7CC,OAAO,SAAAC,GAEN,OADiBA,EAAKC,KAAKC,OAAOC,KAAKC,WAAW,QAAU,KAAO,QAC/CZ,EAAKa,OAE1BC,IAAI,SAAAN,GAAI,OAAIO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMd,KAAMI,EAAMW,IAAKX,EAAKC,KAAKC,OAAOC,KAAMX,KAAMA,MAE7DoB,EAAWnB,KAAKC,MAAMmB,YAAYC,IAClCC,EAAQ,CACZC,GAAE,wBAA0BJ,EAA1B,KACFK,GAAE,6BAA+BL,EAA/B,KACFpB,EAAKa,MAEP,OACEE,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,QACbX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,eAAeH,GAC7BR,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cAAcvB,UAvBRwB,IAAMC,uDCKjCC,4FACJ9B,OAAA,WAAS,IACCwB,EAAUtB,KAAKC,MAAME,KAAK0B,KAAKC,aAA/BR,MACAD,EAAQrB,KAAKC,MAAMmB,YAAnBC,IAGFU,EAAY,CAChBR,GAAE,wBAA0BF,EAA1B,OAAoCC,EACtCE,GAAE,6BAA+BH,EAA/B,OAAyCC,GAHlBtB,KAAKC,MAAxBF,KAAQa,MAMhB,OACEE,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAQO,MAAOS,IACfjB,EAAAC,EAAAC,cAACkB,EAAA,EAAYlC,KAAKC,OAClBa,EAAAC,EAAAC,cAACmB,EAAuBnC,KAAKC,aAhBbyB,IAAMC,WAyBnBS,GAFEC,sBAAST,GAEF,uFCjCf,SAASU,EAAiBC,EAAY3B,GAC3C,IAAM4B,EAAWC,KAAKC,MAAMH,EAAa,IAAM,EACzCI,EAAO,IAAIC,MAAMJ,GAAUK,KAAK,KAAKC,KAAK,IAEhD,MAAO,CACLvB,GAAOoB,EAAL,IAAaJ,EAAb,YACFf,GAAOmB,EAAL,IAAaJ,EAAb,mBACF3B,yFCIWmC,IAPf,SAAyBC,GACvB,OAAO,SAAA/C,GAEL,OAAOgD,EAAAlC,EAAAC,cAACgC,EAADE,OAAAC,OAAA,GAAsBlD,EAAtB,CAA6BmD,YADhB,SAAAC,GAAI,OAAIC,IAAOD,GAAME,OAAOtD,EAAMF,KAAKa,4GCAzDK,oGACJnB,OAAA,WAAS,IAAA0D,EACuBxD,KAAKC,MAA3BF,EADDyD,EACCzD,KAAMqD,EADPI,EACOJ,YACNb,EAAevC,KAAKC,MAAME,KAAKK,KAA/B+B,WAFDkB,EAQHzD,KAAKC,MAAME,KAAKK,KAAKkD,YAJvBpC,EAJKmC,EAILnC,MACA+B,EALKI,EAKLJ,KACAM,EANKF,EAMLE,SACAC,EAPKH,EAOLG,YAPKC,EASwB7D,KAAKC,MAAME,KAAKK,KAAKC,OAA5CC,EATDmD,EASCnD,KAAMoD,EATPD,EASOC,aAERC,EAAO,CACXxC,GAAI,OACJC,GAAI,QACJzB,EAAKa,MAEP,OACEqC,EAAAlC,EAAAC,cAAA,OAAKS,UAAU,QACbwB,EAAAlC,EAAAC,cAAA,OAAKS,UAAU,cACbwB,EAAAlC,EAAAC,cAAA,QACES,UAAU,kBACVuC,SAAUZ,EAAYC,GAAMY,OAAO,iBAElCb,EAAYC,GAAMY,OAAO,cAE5BhB,EAAAlC,EAAAC,cAAA,QAAMS,UAAU,uBAChBwB,EAAAlC,EAAAC,cAAA,QAAMS,UAAU,sBAAsBP,IAAK4C,GACzCb,EAAAlC,EAAAC,cAACkD,EAAA,KAAD,CAAMC,GAAIL,EAAcrC,UAAU,4BAC/BkC,IAGLV,EAAAlC,EAAAC,cAAA,QAAMS,UAAU,uBAChBwB,EAAAlC,EAAAC,cAAA,aAAQsB,YAAiBC,EAAYxC,EAAKa,QAE5CqC,EAAAlC,EAAAC,cAAA,MAAIS,UAAU,eACZwB,EAAAlC,EAAAC,cAACkD,EAAA,KAAD,CAAMzC,UAAU,mBAAmB0C,GAAIzD,GACpCY,IAGL2B,EAAAlC,EAAAC,cAAA,KAAGS,UAAU,qBAAqBmC,GAClCX,EAAAlC,EAAAC,cAACkD,EAAA,KAAD,CAAMzC,UAAU,iBAAiB0C,GAAIzD,GAClCqD,QA1CQrC,IAAMC,YAiDVoB,gBAAgB9B","file":"component---src-templates-tag-template-jsx-4cb204c5079f3d3453c8.js","sourcesContent":["import React from 'react'\nimport Post from '../Post'\n\nclass TagTemplateDetails extends React.Component {\n  render() {\n    const { i18n } = this.props\n\n    const posts = this.props.data.allMarkdownRemark.edges\n    const items = posts\n      .filter(post => {\n        const postLang = post.node.fields.slug.startsWith('/fr/') ? 'fr' : 'en'\n        return postLang === i18n.lang\n      })\n      .map(post => <Post data={post} key={post.node.fields.slug} i18n={i18n} />)\n\n    const tagTitle = this.props.pageContext.tag\n    const title = {\n      en: `All Posts tagged as \"${tagTitle}\" `,\n      fr: `Tous les articles tagués \"${tagTitle}\"`,\n    }[i18n.lang]\n\n    return (\n      <div className=\"content\">\n        <div className=\"content__inner\">\n          <div className=\"page\">\n            <h1 className=\"page__title\">{title}</h1>\n            <div className=\"page__body\">{items}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TagTemplateDetails\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport withI18n from '../hocs/withI18n'\nimport Layout from '../components/Layout'\nimport Sidebar from '../components/Sidebar'\nimport TagTemplateDetails from '../components/TagTemplateDetails'\n\nclass TagTemplate extends React.Component {\n  render() {\n    const { title } = this.props.data.site.siteMetadata\n    const { tag } = this.props.pageContext\n\n    const { i18n: { lang } } = this.props\n    const pageTitle = {\n      en: `All Posts tagged as \"${tag}\" - ${title}`,\n      fr: `Tous les articles tagués \"${tag}\" - ${title}`,\n    }[lang]\n\n    return (\n      <Layout>\n        <div>\n          <Helmet title={pageTitle} />\n          <Sidebar {...this.props} />\n          <TagTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default withI18n(TagTemplate)\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n        subtitles {\n          en\n          fr\n        }\n        greetings {\n          en\n          fr\n        }\n        menus {\n          en {\n            label\n            path\n          }\n          fr {\n            label\n            path\n          }\n        }\n        author {\n          name\n          email\n          twitter\n          github\n          linkedin\n          rss\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: {\n        frontmatter: {\n          tags: { in: [$tag] }\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          timeToRead\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","export function formatTimeToRead(timeToRead, lang) {\n  const cupCount = Math.round(timeToRead / 5) || 1\n  const cups = new Array(cupCount).fill('☕').join('')\n\n  return {\n    en: `${cups} ${timeToRead} min read`,\n    fr: `${cups} ${timeToRead} min de lecture`,\n  }[lang]\n}\n","import React from 'react'\nimport moment from 'moment'\nimport 'moment/locale/fr'\n\nfunction withLocalMoment(WrappedComponent) {\n  return props => {\n    const localMoment = date => moment(date).locale(props.i18n.lang)\n    return <WrappedComponent {...props} localMoment={localMoment} />\n  }\n}\n\nexport default withLocalMoment\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { formatTimeToRead } from '../../helpers'\nimport withLocalMoment from '../../hocs/withLocalMoment'\nimport './style.scss'\n\nclass Post extends React.Component {\n  render() {\n    const { i18n, localMoment } = this.props\n    const { timeToRead } = this.props.data.node\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n\n    const read = {\n      en: 'Read',\n      fr: 'Lire',\n    }[i18n.lang]\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={localMoment(date).format('MMMM D, YYYY')}\n          >\n            {localMoment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n          <span className=\"post__meta-divider\" />\n          <small>{formatTimeToRead(timeToRead, i18n.lang)}</small>\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">{description}</p>\n        <Link className=\"post__readmore\" to={slug}>\n          {read}\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default withLocalMoment(Post)\n"],"sourceRoot":""}